#!/bin/sh
set -e
SCRIPT="$(basename "$0")"
if [ -t 1 ]
then
    ncolors=$(tput colors)
    if [ -n "$ncolors" -a "$ncolors" -ge 8 ]
    then
        blue="$(tput setaf 4)"
        green="$(tput setaf 2)"
        red="$(tput setaf 1)"
        yellow="$(tput setaf 3)"
        normal="$(tput sgr0)"
    fi
fi
_fix() {
    local FMT="$1"
    local FLS="$2"
    if [ -z "$FLS" ]
    then
        return
    fi
    if ! type "$FMT" >/dev/null
    then
        >&2 echo "${blue}[$SCRIPT] ${red}Program $normal'$FMT' ${red}not found$normal"
        exit 2
    fi
    case "$FMT" in
    biome)
        printf '%s' "$FLS" | xargs -d '\n' biome check --apply || true
        printf '%s' "$FLS" | xargs -d '\n' biome format --write
        ;;
    ruff)
        printf '%s' "$FLS" | xargs -d '\n' ruff check --fix --exit-zero
        printf '%s' "$FLS" | xargs -d '\n' ruff format
        ;;
    php-cs-fixer)
        printf '%s' "$FLS" | xargs -d '\n' php-cs-fixer fix
        ;;
    clang-format)
        printf '%s' "$FLS" | xargs -d '\n' clang-format -i
        ;;
    rustfmt)
        # cargo clippy --fix
        printf '%s' "$FLS" | xargs -d '\n' rustfmt --edition 2021
        ;;
    *)
        >&2 echo "${blue}[$SCRIPT] ${red}Unknown program$normal '$FMT'"
        exit 2
    esac
    local CODE=$?
    echo "${blue}[$SCRIPT]$normal Fixed $(echo -n "$FLS"|wc -l) files with '$FMT' (exit code $CODE)"
}

PARENT_PID=$PPID
while [ "$PARENT_PID" -gt 1 ]
do
    IFS=' ' read -r PARENT_PID PARENT_COM <<-EOF
	$(ps -p $PARENT_PID -o ppid=,comm=)
	EOF
    if [ "$PARENT_COM" = git ]
    then
        GIT_ARG=--cached
        break
    fi
done

FILES="$(git diff $GIT_ARG --name-only --diff-filter=AM)"
IFS='
'
for FILE in $FILES
do
    case "$FILE" in
    *.cts|*.mts|*.ts|*.tsx|*.cjs|*.js|*.jsx|*.mjs|*.json)
        FILES_BIOME="$FILES_BIOME$FILE$IFS"
        ;;
    *.py|*.pyi)
        FILES_RUFF="$FILES_RUFF$FILE$IFS"
        ;;
    *.php|*.php3|*.php4|*.php5|*.php7|*.php8|*.pht|*.phtml)
        FILES_PHP_CS_FIXER="$FILES_PHP_CS_FIXER$FILE$IFS"
        ;;
    *.[cChH]|*.[cChH].in|*.[ch]pp|*.[ch]pp.in|*.[ch]xx|*.[ch]xx.in|*.cc|*.cc.in|*.hh|*.hh.in|*.inl|*.cats)
        FILES_CLANG_FORMAT="$FILES_CLANG_FORMAT$FILE$IFS"
        ;;
    *.java|*.jsp|*.jspx|*.properties|*.cs)
        FILES_CLANG_FORMAT="$FILES_CLANG_FORMAT$FILE$IFS"
        ;;
    *.rs)
        FILES_RUSTFMT="$FILES_RUSTFMT$FILE$IFS"
        ;;
    *)
        >&2 echo "${blue}[$SCRIPT] ${yellow}No support for:$normal '$FILE'"
        ;;
    esac
done
_fix 'biome' "$FILES_BIOME"
_fix 'ruff' "$FILES_RUFF"
_fix 'php-cs-fixer' "$FILES_PHP_CS_FIXER"
_fix 'clang-format' "$FILES_CLANG_FORMAT"
_fix 'rustfmt' "$FILES_RUSTFMT"
if [ "$GIT_ARG" = '--cached' ]
then
    printf '%s' "$FILES" | xargs -d '\n' git add
fi
