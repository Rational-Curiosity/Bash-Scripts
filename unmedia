#!/bin/sh
# check if stdout is a terminal...
if [ -t 1 ]
then
    __echo() {
        echo "$@"
    }
else
    __echo() {
        dunstify -a unmedia "$@"
    }
fi

INTERACTIVE=false
ARGS=true
PATTERN=
process_args() {
    if [ -z "$PATTERN" ]
    then
        PATTERN="$1"
        INTERACTIVE=true
    else
        PATTERN="$PATTERN|$1"
    fi
}
while [ "$#" -gt 0 ]
do
    if $ARGS
    then
        case "$1" in
        (--)
            ARGS=false
            ;;
        (-i)
            INTERACTIVE=true
            ;;
        (*)
            process_args "$1"
            ;;
        esac
    else
        process_args "$1"
    fi
    shift
done

if FOLDERS="$(ls -d1 ~/mnt/* 2>/dev/null)"
then
    if [ -z "$SUDO_UID" ]
    then
        >&2 echo "Error: sudo prefix required"
        exit 1
    fi

    if echo "$FOLDERS" | xargs -d '
' umount
    then
        echo "$FOLDERS" | xargs -d '
' -L 1 rmdir
        echo "$FOLDERS" | xargs -d '
' -L 1 echo "Unbinded "
    else
        exit 2
    fi
fi

if $INTERACTIVE
then
    IFS='
'
    for DEVICE in $(lsblk -psrno NAME,TYPE,HOTPLUG,MOUNTPOINT,FSTYPE,LABEL \
        | sed 's/\\x20/ /g' | grep -E "(part|disk) 1 /.*($PATTERN)")
    do
        IFS=' '
        read -p "Unmount $(echo "$DEVICE" | sed 's|part 1 /||') [Y/n]? " RESPONSE
        IFS='
'
        case $RESPONSE in
        [Nn]*)
            continue
            ;;
        esac
        __echo "$(udisksctl unmount -b "$(echo "$DEVICE" | cut -d' ' -f1)")"
    done
else
    __echo "$(lsblk -psrno NAME,TYPE,HOTPLUG,MOUNTPOINT | grep -E "(part|disk) 1 /" \
        | cut -d' ' -f1 | xargs -rL 1 udisksctl unmount -b)"
fi
